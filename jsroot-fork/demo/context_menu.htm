<!DOCTYPE html>
<html lang="en">
   <head>
      <meta charset="utf-8">
      <title>Custom context menu example</title>
      <link rel="shortcut icon" href="../img/RootIcon.ico"/>
   </head>

   <body>
      <div id="guiDiv" path="../../files/" files="ct.root;exclusion.root;fillrandom.root;glbox.root;graph.root;hsimple.root;legends.root;rf107.root;stacks.root;zdemo.root">
         loading ...
      </div>
   </body>

   <script type="module">
      // build standard GUI, open ROOT file and display histogram

      import { buildGUI } from '../modules/gui.mjs';

      let hpainter = await buildGUI('guiDiv');

      await hpainter.openRootFile('../../files/hsimple.root');

      let histpainter = await hpainter.display('hpxpy;1', 'colz');

      // assign new context menu handler for TH2 drawing
      histpainter.oldFillHistContextMenu = histpainter.fillHistContextMenu;

      histpainter.fillHistContextMenu = function(menu) {
         let itemname = this.getItemName();
         if ((typeof itemname == 'string') && (itemname.indexOf('hpxpy') >= 0)) {
            let tip = menu.painter.getToolTip(menu.getEventPosition());

            // example how to get label from bin index
            // if (tip.binx !== undefined) console.log(`binx as text ${menu.painter.getFramePainter().axisAsText('x', tip.binx)}`);
            // if (tip.biny !== undefined) console.log(`biny as text ${menu.painter.getFramePainter().axisAsText('y', tip.biny)}`);

            console.log(`Hist context menu for ${itemname} bins: ${tip.binx} ${tip.biny} cont: ${tip.cont}`);

            menu.add(`sub:Histogram bin [${tip.binx}, ${tip.biny}]`, () => menu.painter.provideSpecialDrawArea());
            menu.add('Show hpx', () => menu.painter.provideSpecialDrawArea('bottom').then(() => hpainter.getObject('hpx')).then(res => menu.painter.drawInSpecialArea(res.obj, '*H')));
            menu.add('Show hprof', () => menu.painter.provideSpecialDrawArea('left').then(() => hpainter.getObject('hprof')).then(res => menu.painter.drawInSpecialArea(res.obj, 'E')));
            menu.add('Close extra area', () => menu.painter.provideSpecialDrawArea());
            menu.add('endsub:');
         }
         return this.oldFillHistContextMenu(menu);
      }
   </script>

</html>
